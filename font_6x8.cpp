// Copyright (c) 2020 Tara Keeling
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT
#include "subpixie.h"

static void Decode6x8_Wide(const uint8_t *GlyphPtr, uint16_t *Buffer);
static void Decode6x8(const uint8_t *GlyphPtr, uint16_t *Buffer, bool Wide);

static const unsigned char FontData_6x8[ ] FONT_DATA_IN_FLASH = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x70, 0x70, 0x20,
	0x20, 0x00, 0x20, 0x00, 0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x50, 0x50, 0xf8, 0x50, 0xf8, 0x50, 0x50, 0x00, 0x20, 0x78, 0x80, 0x70,
	0x08, 0xf0, 0x60, 0x00, 0x00, 0xc8, 0x90, 0x20, 0x40, 0x48, 0x98, 0x00,
	0x20, 0x50, 0x20, 0xa8, 0x90, 0x90, 0x68, 0x00, 0x20, 0x20, 0x40, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x80, 0x80, 0x80, 0x40, 0x20, 0x00,
	0x40, 0x20, 0x10, 0x10, 0x10, 0x20, 0x40, 0x00, 0x00, 0x50, 0x20, 0xf8,
	0x20, 0x50, 0x00, 0x00, 0x00, 0x10, 0x10, 0x7c, 0x10, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x40, 0x00, 0x00, 0x00, 0x78,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00,
	0x00, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x70, 0x88, 0x98, 0xa8,
	0xc8, 0xc8, 0x70, 0x00, 0x20, 0x60, 0xa0, 0x20, 0x20, 0x20, 0xf8, 0x00,
	0x70, 0x88, 0x08, 0x30, 0x60, 0x88, 0xf8, 0x00, 0x70, 0x88, 0x08, 0x30,
	0x08, 0x88, 0x70, 0x00, 0x10, 0x30, 0x50, 0x90, 0xf8, 0x10, 0x38, 0x00,
	0xf8, 0x80, 0x80, 0xf0, 0x08, 0x88, 0x70, 0x00, 0x30, 0x40, 0x80, 0xf0,
	0x88, 0x88, 0x70, 0x00, 0xf8, 0x88, 0x10, 0x20, 0x40, 0x40, 0x40, 0x00,
	0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00, 0x70, 0x88, 0x88, 0x78,
	0x08, 0x08, 0x70, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x20, 0x20, 0x00,
	0x00, 0x20, 0x20, 0x00, 0x00, 0x20, 0x20, 0x40, 0x10, 0x20, 0x40, 0x80,
	0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xf8, 0x00, 0x00,
	0x40, 0x20, 0x10, 0x08, 0x10, 0x20, 0x40, 0x00, 0x70, 0x88, 0x08, 0x10,
	0x20, 0x00, 0x20, 0x00, 0x70, 0x88, 0xb8, 0xa8, 0xb8, 0x80, 0x70, 0x00,
	0x20, 0x50, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x00, 0xf0, 0x48, 0x48, 0x70,
	0x48, 0x48, 0xf0, 0x00, 0x30, 0x48, 0x80, 0x80, 0x80, 0x48, 0x30, 0x00,
	0xf0, 0x48, 0x48, 0x48, 0x48, 0x48, 0xf0, 0x00, 0xf8, 0x48, 0x40, 0x70,
	0x40, 0x48, 0xf8, 0x00, 0xf8, 0x48, 0x40, 0x70, 0x40, 0x40, 0xe0, 0x00,
	0x30, 0x48, 0x80, 0x80, 0x98, 0x48, 0x38, 0x00, 0x88, 0x88, 0x88, 0xf8,
	0x88, 0x88, 0x88, 0x00, 0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00,
	0x38, 0x10, 0x10, 0x10, 0x90, 0x90, 0x60, 0x00, 0xc8, 0x50, 0x50, 0x60,
	0x50, 0x50, 0xcc, 0x00, 0xe0, 0x40, 0x40, 0x40, 0x40, 0x48, 0xf8, 0x00,
	0x88, 0xd8, 0xa8, 0xa8, 0x88, 0x88, 0x88, 0x00, 0x88, 0xc8, 0xa8, 0x98,
	0x88, 0x88, 0x88, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
	0xf0, 0x48, 0x48, 0x70, 0x40, 0x40, 0xe0, 0x00, 0x70, 0x88, 0x88, 0x88,
	0x88, 0xa8, 0x70, 0x0c, 0xf0, 0x48, 0x48, 0x70, 0x60, 0x50, 0xc8, 0x00,
	0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0x00, 0xf8, 0xa8, 0x20, 0x20,
	0x20, 0x20, 0x70, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
	0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00, 0x88, 0x88, 0x88, 0xa8,
	0xa8, 0xa8, 0x50, 0x00, 0x88, 0x50, 0x50, 0x20, 0x50, 0x50, 0x88, 0x00,
	0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x70, 0x00, 0xf8, 0x88, 0x10, 0x20,
	0x40, 0x88, 0xf8, 0x00, 0xe0, 0x80, 0x80, 0x80, 0x80, 0x80, 0xe0, 0x00,
	0x80, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x00, 0xe0, 0x20, 0x20, 0x20,
	0x20, 0x20, 0xe0, 0x00, 0x20, 0x50, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x20, 0x20, 0x10, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x08, 0x78, 0x88, 0x7c, 0x00,
	0xc0, 0x40, 0x40, 0x50, 0x68, 0x48, 0xb0, 0x00, 0x00, 0x00, 0x70, 0x88,
	0x80, 0x88, 0x70, 0x00, 0x18, 0x08, 0x08, 0x68, 0x98, 0x98, 0x6c, 0x00,
	0x00, 0x00, 0x70, 0x88, 0xf8, 0x80, 0x70, 0x00, 0x30, 0x48, 0x40, 0xe0,
	0x40, 0x40, 0xe0, 0x00, 0x00, 0x00, 0x68, 0x88, 0x88, 0x78, 0x08, 0xf0,
	0xc0, 0x40, 0x50, 0x68, 0x48, 0x48, 0xc8, 0x00, 0x20, 0x00, 0x60, 0x20,
	0x20, 0x20, 0x70, 0x00, 0x08, 0x00, 0x18, 0x08, 0x08, 0x88, 0x88, 0x70,
	0xc0, 0x40, 0x48, 0x50, 0x60, 0x50, 0x48, 0x00, 0x60, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x70, 0x00, 0x00, 0x00, 0xd0, 0xa8, 0xa8, 0xa8, 0xa8, 0x00,
	0x00, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x70, 0x88,
	0x88, 0x88, 0x70, 0x00, 0x00, 0x00, 0xf0, 0x48, 0x48, 0x70, 0x40, 0xe0,
	0x00, 0x00, 0x68, 0x90, 0x90, 0x70, 0x10, 0x38, 0x00, 0x00, 0xd8, 0x68,
	0x40, 0x40, 0xe0, 0x00, 0x00, 0x00, 0x78, 0x80, 0x70, 0x08, 0xf0, 0x00,
	0x40, 0x40, 0xf0, 0x40, 0x40, 0x48, 0x30, 0x00, 0x00, 0x00, 0x88, 0x88,
	0x88, 0x98, 0x68, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00,
	0x00, 0x00, 0x88, 0xa8, 0xa8, 0xa8, 0x50, 0x00, 0x00, 0x00, 0x88, 0x50,
	0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x78, 0x08, 0xf0,
	0x00, 0x00, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0x00, 0x18, 0x20, 0x20, 0xc0,
	0x20, 0x20, 0x18, 0x00, 0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x00,
	0xc0, 0x20, 0x20, 0x18, 0x20, 0x20, 0xc0, 0x00, 0x48, 0xb0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x50, 0x88, 0x88, 0x88, 0xf8, 0x00
};

const Subpixie_Fontdef Font_6x8 = {
	FontData_6x8,
	6,
	8,
	0x20,
	0x7F,
	Decode6x8
};

static void Decode6x8_Wide( const uint8_t* GlyphPtr, uint16_t* Buffer ) {
	uint8_t Data = 0;
	int y = 0;

	for ( y = 0; y < Font_6x8.Height; y++ ) {
		Data = Subpixie_Font_Get_Byte( GlyphPtr++ );

		*Buffer++ = SubpxDecodeTable_Wide[ ( Data >> 5 ) & 0x07 ][ 0 ];
		*Buffer++ = SubpxDecodeTable_Wide[ ( Data >> 5 ) & 0x07 ][ 1 ];

		*Buffer++ = SubpxDecodeTable_Wide[ ( Data >> 2 ) & 0x07 ][ 0 ];
		*Buffer++ = SubpxDecodeTable_Wide[ ( Data >> 2 ) & 0x07 ][ 1 ];
	}
}

static void Decode6x8( const uint8_t* GlyphPtr, uint16_t* Buffer, bool Wide ) {
	uint8_t Data = 0;
	int y = 0;

	if ( Wide == false ) {
		for ( y = 0; y < Font_6x8.Height; y++ ) {
			Data = Subpixie_Font_Get_Byte( GlyphPtr++ );

			*Buffer++ = SubpxDecodeTable[ ( Data >> 5 ) & 0x07 ];
			*Buffer++ = SubpxDecodeTable[ ( Data >> 2 ) & 0x07 ];
		}

		return;
	}

	Decode6x8_Wide( GlyphPtr, Buffer );
}
